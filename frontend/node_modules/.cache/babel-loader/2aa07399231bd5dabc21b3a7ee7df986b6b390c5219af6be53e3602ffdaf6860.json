{"ast":null,"code":"import axios from 'axios';\nconst apiClient = axios.create({\n  baseURL: 'http://localhost:8000',\n  // Укажите URL вашего бекенда\n  withCredentials: false,\n  headers: {\n    Accept: 'application/json',\n    'Content-Type': 'application/json'\n  }\n});\nconst api = {\n  register: async data => {\n    return await axios.post('http://localhost:8000/register', data);\n  }\n};\nexport default {\n  register(user) {\n    return apiClient.post('/register', user);\n  },\n  login(user) {\n    return apiClient.post('/token', user);\n  },\n  getUserInfo(token) {\n    return apiClient.get('/users/me', {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n  },\n  updateUserInfo(token, userData) {\n    return apiClient.put('/users/me/update', userData, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n  }\n};","map":{"version":3,"names":["axios","apiClient","create","baseURL","withCredentials","headers","Accept","api","register","data","post","user","login","getUserInfo","token","get","Authorization","updateUserInfo","userData","put"],"sources":["F:/_MentalHealthSecond/frontend/src/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst apiClient = axios.create({\r\n  baseURL: 'http://localhost:8000', // Укажите URL вашего бекенда\r\n  withCredentials: false,\r\n  headers: {\r\n    Accept: 'application/json',\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\nconst api = {\r\n    register: async (data) => {\r\n      return await axios.post('http://localhost:8000/register', data);\r\n    },\r\n  };\r\n\r\nexport default {\r\n  register(user) {\r\n    return apiClient.post('/register', user);\r\n  },\r\n  login(user) {\r\n    return apiClient.post('/token', user);\r\n  },\r\n  getUserInfo(token) {\r\n    return apiClient.get('/users/me', {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n  },\r\n  updateUserInfo(token, userData) {\r\n    return apiClient.put('/users/me/update', userData, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n  },\r\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,SAAS,GAAGD,KAAK,CAACE,MAAM,CAAC;EAC7BC,OAAO,EAAE,uBAAuB;EAAE;EAClCC,eAAe,EAAE,KAAK;EACtBC,OAAO,EAAE;IACPC,MAAM,EAAE,kBAAkB;IAC1B,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AACF,MAAMC,GAAG,GAAG;EACRC,QAAQ,EAAE,MAAOC,IAAI,IAAK;IACxB,OAAO,MAAMT,KAAK,CAACU,IAAI,CAAC,gCAAgC,EAAED,IAAI,CAAC;EACjE;AACF,CAAC;AAEH,eAAe;EACbD,QAAQA,CAACG,IAAI,EAAE;IACb,OAAOV,SAAS,CAACS,IAAI,CAAC,WAAW,EAAEC,IAAI,CAAC;EAC1C,CAAC;EACDC,KAAKA,CAACD,IAAI,EAAE;IACV,OAAOV,SAAS,CAACS,IAAI,CAAC,QAAQ,EAAEC,IAAI,CAAC;EACvC,CAAC;EACDE,WAAWA,CAACC,KAAK,EAAE;IACjB,OAAOb,SAAS,CAACc,GAAG,CAAC,WAAW,EAAE;MAChCV,OAAO,EAAE;QACPW,aAAa,EAAE,UAAUF,KAAK;MAChC;IACF,CAAC,CAAC;EACJ,CAAC;EACDG,cAAcA,CAACH,KAAK,EAAEI,QAAQ,EAAE;IAC9B,OAAOjB,SAAS,CAACkB,GAAG,CAAC,kBAAkB,EAAED,QAAQ,EAAE;MACjDb,OAAO,EAAE;QACPW,aAAa,EAAE,UAAUF,KAAK;MAChC;IACF,CAAC,CAAC;EACJ;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}