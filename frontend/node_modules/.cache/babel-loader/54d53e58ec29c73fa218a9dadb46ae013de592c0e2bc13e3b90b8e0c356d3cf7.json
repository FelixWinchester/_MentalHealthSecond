{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"register-page\"\n};\nconst _hoisted_2 = {\n  class: \"header\"\n};\nconst _hoisted_3 = {\n  class: \"content\"\n};\nconst _hoisted_4 = {\n  class: \"section register-section\"\n};\nconst _hoisted_5 = {\n  class: \"register-form\"\n};\nconst _hoisted_6 = {\n  class: \"form-group\"\n};\nconst _hoisted_7 = {\n  class: \"form-group\"\n};\nconst _hoisted_8 = {\n  class: \"form-group\"\n};\nconst _hoisted_9 = {\n  class: \"form-group\"\n};\nconst _hoisted_10 = [\"disabled\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" Заголовок страницы \"), _createElementVNode(\"header\", _hoisted_2, [_createElementVNode(\"h1\", null, _toDisplayString($data.pageTitle), 1 /* TEXT */), _cache[5] || (_cache[5] = _createElementVNode(\"p\", null, \"Создайте новый аккаунт, чтобы получить доступ ко всем возможностям нашего сайта.\", -1 /* HOISTED */))]), _createCommentVNode(\" Основной контент \"), _createElementVNode(\"main\", _hoisted_3, [_createCommentVNode(\" Секция с формой регистрации \"), _createElementVNode(\"section\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_cache[10] || (_cache[10] = _createElementVNode(\"h2\", null, \"Регистрация\", -1 /* HOISTED */)), _createElementVNode(\"form\", {\n    onSubmit: _cache[4] || (_cache[4] = _withModifiers((...args) => $options.handleRegister && $options.handleRegister(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", _hoisted_6, [_cache[6] || (_cache[6] = _createElementVNode(\"label\", {\n    for: \"username\"\n  }, \"Имя пользователя:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"username\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.username = $event),\n    required: \"\",\n    placeholder: \"Введите ваше имя пользователя\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.username]])]), _createElementVNode(\"div\", _hoisted_7, [_cache[7] || (_cache[7] = _createElementVNode(\"label\", {\n    for: \"email\"\n  }, \"Электронная почта:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"email\",\n    id: \"email\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.email = $event),\n    required: \"\",\n    placeholder: \"Введите вашу электронную почту\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.email]])]), _createElementVNode(\"div\", _hoisted_8, [_cache[8] || (_cache[8] = _createElementVNode(\"label\", {\n    for: \"password\"\n  }, \"Пароль:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    id: \"password\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.password = $event),\n    required: \"\",\n    placeholder: \"Введите ваш пароль\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.password]])]), _createElementVNode(\"div\", _hoisted_9, [_cache[9] || (_cache[9] = _createElementVNode(\"label\", {\n    for: \"confirm-password\"\n  }, \"Подтвердите пароль:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    id: \"confirm-password\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.confirmPassword = $event),\n    required: \"\",\n    placeholder: \"Подтвердите ваш пароль\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.confirmPassword]])]), _createElementVNode(\"button\", {\n    type: \"submit\",\n    class: \"cta-button\",\n    disabled: $data.isLoading\n  }, _toDisplayString($data.isLoading ? 'Регистрация...' : 'Зарегистрироваться'), 9 /* TEXT, PROPS */, _hoisted_10)], 32 /* NEED_HYDRATION */)]), _cache[11] || (_cache[11] = _createElementVNode(\"div\", {\n    class: \"register-image\"\n  }, [_createElementVNode(\"img\", {\n    src: \"https://via.placeholder.com/400x300\",\n    alt: \"Регистрация\",\n    class: \"image\"\n  })], -1 /* HOISTED */))]), _createCommentVNode(\" Секция с дополнительной информацией \"), _cache[12] || (_cache[12] = _createElementVNode(\"section\", {\n    class: \"section info-section\"\n  }, [_createElementVNode(\"h2\", null, \"Уже есть аккаунт?\"), _createElementVNode(\"p\", null, [_createTextVNode(\" Если у вас уже есть аккаунт, вы можете \"), _createElementVNode(\"a\", {\n    href: \"/login\"\n  }, \"войти в систему\"), _createTextVNode(\". \")])], -1 /* HOISTED */))])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createCommentVNode","_createElementVNode","_hoisted_2","_toDisplayString","$data","pageTitle","_hoisted_3","_hoisted_4","_hoisted_5","onSubmit","_cache","_withModifiers","args","$options","handleRegister","_hoisted_6","for","type","id","$event","username","required","placeholder","_hoisted_7","email","_hoisted_8","password","_hoisted_9","confirmPassword","disabled","isLoading","_hoisted_10","src","alt","_createTextVNode","href"],"sources":["F:\\_MentalHealthSecond\\frontend\\src\\components\\RegisterPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"register-page\">\r\n    <!-- Заголовок страницы -->\r\n    <header class=\"header\">\r\n      <h1>{{ pageTitle }}</h1>\r\n      <p>Создайте новый аккаунт, чтобы получить доступ ко всем возможностям нашего сайта.</p>\r\n    </header>\r\n\r\n    <!-- Основной контент -->\r\n    <main class=\"content\">\r\n      <!-- Секция с формой регистрации -->\r\n      <section class=\"section register-section\">\r\n        <div class=\"register-form\">\r\n          <h2>Регистрация</h2>\r\n          <form @submit.prevent=\"handleRegister\">\r\n            <div class=\"form-group\">\r\n              <label for=\"username\">Имя пользователя:</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"username\"\r\n                v-model=\"username\"\r\n                required\r\n                placeholder=\"Введите ваше имя пользователя\"\r\n              />\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"email\">Электронная почта:</label>\r\n              <input\r\n                type=\"email\"\r\n                id=\"email\"\r\n                v-model=\"email\"\r\n                required\r\n                placeholder=\"Введите вашу электронную почту\"\r\n              />\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"password\">Пароль:</label>\r\n              <input\r\n                type=\"password\"\r\n                id=\"password\"\r\n                v-model=\"password\"\r\n                required\r\n                placeholder=\"Введите ваш пароль\"\r\n              />\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"confirm-password\">Подтвердите пароль:</label>\r\n              <input\r\n                type=\"password\"\r\n                id=\"confirm-password\"\r\n                v-model=\"confirmPassword\"\r\n                required\r\n                placeholder=\"Подтвердите ваш пароль\"\r\n              />\r\n            </div>\r\n            <button type=\"submit\" class=\"cta-button\" :disabled=\"isLoading\">\r\n              {{ isLoading ? 'Регистрация...' : 'Зарегистрироваться' }}\r\n            </button>\r\n          </form>\r\n        </div>\r\n        <div class=\"register-image\">\r\n          <img\r\n            src=\"https://via.placeholder.com/400x300\"\r\n            alt=\"Регистрация\"\r\n            class=\"image\"\r\n          />\r\n        </div>\r\n      </section>\r\n\r\n      <!-- Секция с дополнительной информацией -->\r\n      <section class=\"section info-section\">\r\n        <h2>Уже есть аккаунт?</h2>\r\n        <p>\r\n          Если у вас уже есть аккаунт, вы можете <a href=\"/login\">войти в систему</a>.\r\n        </p>\r\n      </section>\r\n    </main>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport api from '@/api/api'; // Укажите правильный путь к файлу api.js\r\n\r\nexport default {\r\n  name: 'RegisterPage',\r\n  data() {\r\n    return {\r\n      username: '',\r\n      email: '',\r\n      password: '',\r\n      confirmPassword: '',\r\n      isLoading: false,\r\n      pageTitle: 'Регистрация', // Добавьте это свойство\r\n    };\r\n  },\r\n  methods: {\r\n    async handleRegister() {\r\n      if (this.password !== this.confirmPassword) {\r\n        alert('Пароли не совпадают!');\r\n        return;\r\n      }\r\n\r\n      this.isLoading = true; // Включаем состояние загрузки\r\n\r\n      try {\r\n        const response = await api.register({\r\n          username: this.username,\r\n          email: this.email,\r\n          password: this.password,\r\n        });\r\n\r\n        console.log('Ответ сервера:', response); // Логируем ответ сервера\r\n\r\n        alert('Регистрация прошла успешно!');\r\n        this.$router.push('/login');\r\n      } catch (error) {\r\n        console.error('Ошибка при регистрации:', error); // Логируем ошибку\r\n\r\n        if (error.response) {\r\n          // Ошибка от сервера\r\n          alert('Ошибка при регистрации: ' + error.response.data.detail);\r\n        } else if (error.request) {\r\n          // Запрос был отправлен, но ответ не получен\r\n          alert('Ошибка сети: сервер не ответил');\r\n        } else {\r\n          // Ошибка на стороне клиента\r\n          alert('Ошибка: ' + error.message);\r\n        }\r\n      } finally {\r\n        this.isLoading = false; // Выключаем состояние загрузки\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.register-page {\r\n  font-family: Arial, sans-serif;\r\n  color: #333;\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n}\r\n\r\n.header {\r\n  text-align: center;\r\n  margin-bottom: 40px;\r\n}\r\n\r\n.header h1 {\r\n  font-size: 2.5rem;\r\n  color: #2c3e50;\r\n}\r\n\r\n.header p {\r\n  font-size: 1.2rem;\r\n  color: #666;\r\n}\r\n\r\n.content {\r\n  margin-bottom: 40px;\r\n}\r\n\r\n.section {\r\n  margin-bottom: 40px;\r\n}\r\n\r\n.section h2 {\r\n  font-size: 2rem;\r\n  color: #2c3e50;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.register-section {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 40px;\r\n}\r\n\r\n.register-form {\r\n  flex: 1;\r\n}\r\n\r\n.register-form p {\r\n  font-size: 1.1rem;\r\n  line-height: 1.6;\r\n  color: #444;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.form-group {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.form-group label {\r\n  display: block;\r\n  font-size: 1rem;\r\n  color: #444;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.form-group input {\r\n  width: 100%;\r\n  padding: 10px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 5px;\r\n  font-size: 1rem;\r\n}\r\n\r\n.cta-button {\r\n  background-color: #2c3e50;\r\n  color: white;\r\n  border: none;\r\n  padding: 10px 20px;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  font-size: 1rem;\r\n}\r\n\r\n.cta-button:hover {\r\n  background-color: #1a2a36;\r\n}\r\n\r\n.cta-button:disabled {\r\n  background-color: #cccccc;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.register-image img {\r\n  max-width: 100%;\r\n  border-radius: 10px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.info-section {\r\n  text-align: center;\r\n}\r\n\r\n.info-section p {\r\n  font-size: 1.1rem;\r\n  color: #666;\r\n}\r\n\r\n.info-section a {\r\n  color: #2c3e50;\r\n  text-decoration: none;\r\n}\r\n\r\n.info-section a:hover {\r\n  text-decoration: underline;\r\n}\r\n</style>"],"mappings":";;EACOA,KAAK,EAAC;AAAe;;EAEhBA,KAAK,EAAC;AAAQ;;EAMhBA,KAAK,EAAC;AAAS;;EAEVA,KAAK,EAAC;AAA0B;;EAClCA,KAAK,EAAC;AAAe;;EAGjBA,KAAK,EAAC;AAAY;;EAUlBA,KAAK,EAAC;AAAY;;EAUlBA,KAAK,EAAC;AAAY;;EAUlBA,KAAK,EAAC;AAAY;oBA7CnC;;uBACEC,mBAAA,CA4EM,OA5ENC,UA4EM,GA3EJC,mBAAA,wBAA2B,EAC3BC,mBAAA,CAGS,UAHTC,UAGS,GAFPD,mBAAA,CAAwB,YAAAE,gBAAA,CAAjBC,KAAA,CAAAC,SAAS,kB,0BAChBJ,mBAAA,CAAuF,WAApF,kFAAgF,qB,GAGrFD,mBAAA,sBAAyB,EACzBC,mBAAA,CAmEO,QAnEPK,UAmEO,GAlELN,mBAAA,iCAAoC,EACpCC,mBAAA,CAwDU,WAxDVM,UAwDU,GAvDRN,mBAAA,CA+CM,OA/CNO,UA+CM,G,4BA9CJP,mBAAA,CAAoB,YAAhB,aAAW,sBACfA,mBAAA,CA4CO;IA5CAQ,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAdvBC,cAAA,KAAAC,IAAA,KAciCC,QAAA,CAAAC,cAAA,IAAAD,QAAA,CAAAC,cAAA,IAAAF,IAAA,CAAc;MACnCX,mBAAA,CASM,OATNc,UASM,G,0BARJd,mBAAA,CAA+C;IAAxCe,GAAG,EAAC;EAAU,GAAC,mBAAiB,sB,gBACvCf,mBAAA,CAME;IALAgB,IAAI,EAAC,MAAM;IACXC,EAAE,EAAC,UAAU;IAnB7B,uBAAAR,MAAA,QAAAA,MAAA,MAAAS,MAAA,IAoByBf,KAAA,CAAAgB,QAAQ,GAAAD,MAAA;IACjBE,QAAQ,EAAR,EAAQ;IACRC,WAAW,EAAC;iDAFHlB,KAAA,CAAAgB,QAAQ,E,KAKrBnB,mBAAA,CASM,OATNsB,UASM,G,0BARJtB,mBAAA,CAA6C;IAAtCe,GAAG,EAAC;EAAO,GAAC,oBAAkB,sB,gBACrCf,mBAAA,CAME;IALAgB,IAAI,EAAC,OAAO;IACZC,EAAE,EAAC,OAAO;IA7B1B,uBAAAR,MAAA,QAAAA,MAAA,MAAAS,MAAA,IA8ByBf,KAAA,CAAAoB,KAAK,GAAAL,MAAA;IACdE,QAAQ,EAAR,EAAQ;IACRC,WAAW,EAAC;iDAFHlB,KAAA,CAAAoB,KAAK,E,KAKlBvB,mBAAA,CASM,OATNwB,UASM,G,0BARJxB,mBAAA,CAAqC;IAA9Be,GAAG,EAAC;EAAU,GAAC,SAAO,sB,gBAC7Bf,mBAAA,CAME;IALAgB,IAAI,EAAC,UAAU;IACfC,EAAE,EAAC,UAAU;IAvC7B,uBAAAR,MAAA,QAAAA,MAAA,MAAAS,MAAA,IAwCyBf,KAAA,CAAAsB,QAAQ,GAAAP,MAAA;IACjBE,QAAQ,EAAR,EAAQ;IACRC,WAAW,EAAC;iDAFHlB,KAAA,CAAAsB,QAAQ,E,KAKrBzB,mBAAA,CASM,OATN0B,UASM,G,0BARJ1B,mBAAA,CAAyD;IAAlDe,GAAG,EAAC;EAAkB,GAAC,qBAAmB,sB,gBACjDf,mBAAA,CAME;IALAgB,IAAI,EAAC,UAAU;IACfC,EAAE,EAAC,kBAAkB;IAjDrC,uBAAAR,MAAA,QAAAA,MAAA,MAAAS,MAAA,IAkDyBf,KAAA,CAAAwB,eAAe,GAAAT,MAAA;IACxBE,QAAQ,EAAR,EAAQ;IACRC,WAAW,EAAC;iDAFHlB,KAAA,CAAAwB,eAAe,E,KAK5B3B,mBAAA,CAES;IAFDgB,IAAI,EAAC,QAAQ;IAACpB,KAAK,EAAC,YAAY;IAAEgC,QAAQ,EAAEzB,KAAA,CAAA0B;sBAC/C1B,KAAA,CAAA0B,SAAS,kEAxD1BC,WAAA,E,0DA4DQ9B,mBAAA,CAMM;IANDJ,KAAK,EAAC;EAAgB,IACzBI,mBAAA,CAIE;IAHA+B,GAAG,EAAC,qCAAqC;IACzCC,GAAG,EAAC,aAAa;IACjBpC,KAAK,EAAC;6BAKZG,mBAAA,yCAA4C,E,4BAC5CC,mBAAA,CAKU;IALDJ,KAAK,EAAC;EAAsB,IACnCI,mBAAA,CAA0B,YAAtB,mBAAiB,GACrBA,mBAAA,CAEI,YA1EZiC,gBAAA,CAwEW,0CACsC,GAAAjC,mBAAA,CAAoC;IAAjCkC,IAAI,EAAC;EAAQ,GAAC,iBAAe,GAzEjFD,gBAAA,CAyEqF,IAC7E,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}