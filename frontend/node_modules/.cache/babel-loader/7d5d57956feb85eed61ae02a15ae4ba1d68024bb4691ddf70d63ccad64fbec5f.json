{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, vModelText as _vModelText, withKeys as _withKeys, withDirectives as _withDirectives, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = {\n  class: \"condition-page\"\n};\nconst _hoisted_2 = {\n  class: \"content\"\n};\nconst _hoisted_3 = {\n  class: \"main-layout\"\n};\nconst _hoisted_4 = {\n  class: \"notes-section\"\n};\nconst _hoisted_5 = {\n  key: 0,\n  class: \"loading\"\n};\nconst _hoisted_6 = {\n  key: 1\n};\nconst _hoisted_7 = [\"onClick\"];\nconst _hoisted_8 = {\n  class: \"new-note\"\n};\nconst _hoisted_9 = {\n  class: \"emoji-sidebar\"\n};\nconst _hoisted_10 = {\n  class: \"emoji-grid\"\n};\nconst _hoisted_11 = [\"onClick\"];\nconst _hoisted_12 = {\n  class: \"selected-emoji\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" Заголовок страницы \"), _cache[4] || (_cache[4] = _createElementVNode(\"header\", {\n    class: \"header\"\n  }, [_createElementVNode(\"h1\", null, \"Мое состояние\"), _createElementVNode(\"p\", null, \"Здесь вы можете отслеживать ваше эмоциональное состояние и делать заметки\")], -1 /* HOISTED */)), _createCommentVNode(\" Основной контент \"), _createElementVNode(\"main\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createCommentVNode(\" Блок с заметками \"), _createElementVNode(\"section\", _hoisted_4, [_ctx.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, \"Загрузка...\")) : (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.notes, note => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: note.id,\n      class: \"note-card\"\n    }, [_createTextVNode(_toDisplayString(note.text) + \" \", 1 /* TEXT */), _createElementVNode(\"button\", {\n      onClick: $event => _ctx.deleteNote(note.id),\n      class: \"delete-button\"\n    }, \"×\", 8 /* PROPS */, _hoisted_7)]);\n  }), 128 /* KEYED_FRAGMENT */))])), _createElementVNode(\"div\", _hoisted_8, [_withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.newNote = $event),\n    placeholder: \"Добавьте новую заметку...\",\n    onKeyup: _cache[1] || (_cache[1] = _withKeys((...args) => _ctx.addNote && _ctx.addNote(...args), [\"enter\"]))\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, _ctx.newNote]]), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => _ctx.addNote && _ctx.addNote(...args)),\n    class: \"cta-button\"\n  }, \"Добавить\")])]), _createCommentVNode(\" Блок с эмодзи \"), _createElementVNode(\"aside\", _hoisted_9, [_cache[3] || (_cache[3] = _createElementVNode(\"h3\", null, \"Выберите эмоцию\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_10, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.emojis, emoji => {\n    return _openBlock(), _createElementBlock(\"button\", {\n      key: emoji,\n      onClick: $event => _ctx.selectEmoji(emoji),\n      class: _normalizeClass([\"emoji-button\", {\n        'selected': _ctx.selectedEmoji === emoji\n      }])\n    }, _toDisplayString(emoji), 11 /* TEXT, CLASS, PROPS */, _hoisted_11);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"div\", _hoisted_12, \" Выбрано: \" + _toDisplayString(_ctx.selectedEmoji || 'пока ничего'), 1 /* TEXT */)])])])]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createCommentVNode","_createElementVNode","_hoisted_2","_hoisted_3","_hoisted_4","_ctx","loading","_hoisted_5","_hoisted_6","_Fragment","_renderList","notes","note","id","_createTextVNode","_toDisplayString","text","onClick","$event","deleteNote","_hoisted_7","_hoisted_8","_cache","newNote","placeholder","onKeyup","_withKeys","args","addNote","_hoisted_9","_hoisted_10","emojis","emoji","selectEmoji","_normalizeClass","selectedEmoji","_hoisted_11","_hoisted_12"],"sources":["C:\\Users\\Professional\\Desktop\\gggg\\_MentalHealthSecond\\frontend\\src\\components\\RegisterPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"condition-page\">\r\n    <!-- Заголовок страницы -->\r\n    <header class=\"header\">\r\n      <h1>Мое состояние</h1>\r\n      <p>Здесь вы можете отслеживать ваше эмоциональное состояние и делать заметки</p>\r\n    </header>\r\n\r\n    <!-- Основной контент -->\r\n    <main class=\"content\">\r\n      <div class=\"main-layout\">\r\n        <!-- Блок с заметками -->\r\n        <section class=\"notes-section\">\r\n          <div v-if=\"loading\" class=\"loading\">Загрузка...</div>\r\n          <div v-else>\r\n            <div v-for=\"note in notes\" :key=\"note.id\" class=\"note-card\">\r\n              {{ note.text }}\r\n              <button @click=\"deleteNote(note.id)\" class=\"delete-button\">×</button>\r\n            </div>\r\n          </div>\r\n          <div class=\"new-note\">\r\n            <textarea \r\n              v-model=\"newNote\" \r\n              placeholder=\"Добавьте новую заметку...\"\r\n              @keyup.enter=\"addNote\"\r\n            ></textarea>\r\n            <button @click=\"addNote\" class=\"cta-button\">Добавить</button>\r\n          </div>\r\n        </section>\r\n\r\n        <!-- Блок с эмодзи -->\r\n        <aside class=\"emoji-sidebar\">\r\n          <h3>Выберите эмоцию</h3>\r\n          <div class=\"emoji-grid\">\r\n            <button \r\n              v-for=\"emoji in emojis\" \r\n              :key=\"emoji\"\r\n              @click=\"selectEmoji(emoji)\"\r\n              class=\"emoji-button\"\r\n              :class=\"{ 'selected': selectedEmoji === emoji }\"\r\n            >\r\n              {{ emoji }}\r\n            </button>\r\n          </div>\r\n          <div class=\"selected-emoji\">\r\n            Выбрано: {{ selectedEmoji || 'пока ничего' }}\r\n          </div>\r\n        </aside>\r\n      </div>\r\n    </main>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport api from '@/api/api'; // Укажите правильный путь к файлу api.js\r\n\r\nexport default {\r\n  name: 'RegisterPage',\r\n  data() {\r\n    return {\r\n      username: '',\r\n      email: '',\r\n      password: '',\r\n      confirmPassword: '',\r\n      isLoading: false,\r\n      pageTitle: 'Регистрация', // Добавьте это свойство\r\n    };\r\n  },\r\n  methods: {\r\n        async handleRegister() {\r\n          if (this.password !== this.confirmPassword) {\r\n            alert('Пароли не совпадают!');\r\n            return;\r\n          }\r\n\r\n          this.isLoading = true;\r\n\r\n          try {\r\n            const response = await api.register({\r\n              username: this.username,\r\n              email: this.email,\r\n              password: this.password,\r\n            });\r\n\r\n            console.log('Ответ сервера:', response);\r\n            alert('Регистрация прошла успешно!');\r\n            this.$router.push('/login');\r\n          } catch (error) {\r\n            console.error('Ошибка при регистрации:', error);\r\n            if (error.response) {\r\n              alert('Ошибка при регистрации: ' + error.response.data.detail);\r\n            } else if (error.request) {\r\n              alert('Ошибка сети: сервер не ответил');\r\n            } else {\r\n              alert('Ошибка: ' + error.message);\r\n            }\r\n          } finally {\r\n            this.isLoading = false;\r\n          }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.register-page {\r\n  font-family: Arial, sans-serif;\r\n  color: #333;\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n}\r\n\r\n.header {\r\n  text-align: center;\r\n  margin-bottom: 40px;\r\n}\r\n\r\n.header h1 {\r\n  font-size: 2.5rem;\r\n  color: #2c3e50;\r\n}\r\n\r\n.header p {\r\n  font-size: 1.2rem;\r\n  color: #666;\r\n}\r\n\r\n.content {\r\n  margin-bottom: 40px;\r\n}\r\n\r\n.section {\r\n  margin-bottom: 40px;\r\n}\r\n\r\n.section h2 {\r\n  font-size: 2rem;\r\n  color: #2c3e50;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.register-section {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 40px;\r\n}\r\n\r\n.register-form {\r\n  flex: 1;\r\n}\r\n\r\n.register-form p {\r\n  font-size: 1.1rem;\r\n  line-height: 1.6;\r\n  color: #444;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.form-group {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.form-group label {\r\n  display: block;\r\n  font-size: 1rem;\r\n  color: #444;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.form-group input {\r\n  width: 100%;\r\n  padding: 10px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 5px;\r\n  font-size: 1rem;\r\n}\r\n\r\n.cta-button {\r\n  background-color: #2c3e50;\r\n  color: white;\r\n  border: none;\r\n  padding: 10px 20px;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  font-size: 1rem;\r\n}\r\n\r\n.cta-button:hover {\r\n  background-color: #1a2a36;\r\n}\r\n\r\n.cta-button:disabled {\r\n  background-color: #cccccc;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.register-image img {\r\n  max-width: 100%;\r\n  border-radius: 10px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.info-section {\r\n  text-align: center;\r\n}\r\n\r\n.info-section p {\r\n  font-size: 1.1rem;\r\n  color: #666;\r\n}\r\n\r\n.info-section a {\r\n  color: #2c3e50;\r\n  text-decoration: none;\r\n}\r\n\r\n.info-section a:hover {\r\n  text-decoration: underline;\r\n}\r\n</style>"],"mappings":";;EACOA,KAAK,EAAC;AAAgB;;EAQnBA,KAAK,EAAC;AAAS;;EACdA,KAAK,EAAC;AAAa;;EAEbA,KAAK,EAAC;AAAe;;EAZtCC,GAAA;EAa8BD,KAAK,EAAC;;;EAbpCC,GAAA;AAAA;mBAAA;;EAoBeD,KAAK,EAAC;AAAU;;EAWhBA,KAAK,EAAC;AAAe;;EAErBA,KAAK,EAAC;AAAY;oBAjCjC;;EA4CeA,KAAK,EAAC;AAAgB;;uBA3CnCE,mBAAA,CAiDM,OAjDNC,UAiDM,GAhDJC,mBAAA,wBAA2B,E,0BAC3BC,mBAAA,CAGS;IAHDL,KAAK,EAAC;EAAQ,IACpBK,mBAAA,CAAsB,YAAlB,eAAa,GACjBA,mBAAA,CAAgF,WAA7E,2EAAyE,E,sBAG9ED,mBAAA,sBAAyB,EACzBC,mBAAA,CAwCO,QAxCPC,UAwCO,GAvCLD,mBAAA,CAsCM,OAtCNE,UAsCM,GArCJH,mBAAA,sBAAyB,EACzBC,mBAAA,CAgBU,WAhBVG,UAgBU,GAfGC,IAAA,CAAAC,OAAO,I,cAAlBR,mBAAA,CAAqD,OAArDS,UAAqD,EAAjB,aAAW,M,cAC/CT,mBAAA,CAKM,OAnBhBU,UAAA,I,kBAeYV,mBAAA,CAGMW,SAAA,QAlBlBC,WAAA,CAegCL,IAAA,CAAAM,KAAK,EAAbC,IAAI;yBAAhBd,mBAAA,CAGM;MAHsBD,GAAG,EAAEe,IAAI,CAACC,EAAE;MAAEjB,KAAK,EAAC;QAf5DkB,gBAAA,CAAAC,gBAAA,CAgBiBH,IAAI,CAACI,IAAI,IAAG,GACf,iBAAAf,mBAAA,CAAqE;MAA5DgB,OAAK,EAAAC,MAAA,IAAEb,IAAA,CAAAc,UAAU,CAACP,IAAI,CAACC,EAAE;MAAGjB,KAAK,EAAC;OAAgB,GAAC,iBAjB1EwB,UAAA,E;qCAoBUnB,mBAAA,CAOM,OAPNoB,UAOM,G,gBANJpB,mBAAA,CAIY;IAzBxB,uBAAAqB,MAAA,QAAAA,MAAA,MAAAJ,MAAA,IAsBuBb,IAAA,CAAAkB,OAAO,GAAAL,MAAA;IAChBM,WAAW,EAAC,2BAA2B;IACtCC,OAAK,EAAAH,MAAA,QAAAA,MAAA,MAxBpBI,SAAA,KAAAC,IAAA,KAwB4BtB,IAAA,CAAAuB,OAAA,IAAAvB,IAAA,CAAAuB,OAAA,IAAAD,IAAA,CAAO;iEAFZtB,IAAA,CAAAkB,OAAO,E,GAIlBtB,mBAAA,CAA6D;IAApDgB,OAAK,EAAAK,MAAA,QAAAA,MAAA,UAAAK,IAAA,KAAEtB,IAAA,CAAAuB,OAAA,IAAAvB,IAAA,CAAAuB,OAAA,IAAAD,IAAA,CAAO;IAAE/B,KAAK,EAAC;KAAa,UAAQ,E,KAIxDI,mBAAA,mBAAsB,EACtBC,mBAAA,CAgBQ,SAhBR4B,UAgBQ,G,0BAfN5B,mBAAA,CAAwB,YAApB,iBAAe,sBACnBA,mBAAA,CAUM,OAVN6B,WAUM,I,kBATJhC,mBAAA,CAQSW,SAAA,QA1CrBC,WAAA,CAmC8BL,IAAA,CAAA0B,MAAM,EAAfC,KAAK;yBADdlC,mBAAA,CAQS;MANND,GAAG,EAAEmC,KAAK;MACVf,OAAK,EAAAC,MAAA,IAAEb,IAAA,CAAA4B,WAAW,CAACD,KAAK;MACzBpC,KAAK,EAtCnBsC,eAAA,EAsCoB,cAAc;QAAA,YACE7B,IAAA,CAAA8B,aAAa,KAAKH;MAAK;wBAE1CA,KAAK,gCAzCtBI,WAAA;oCA4CUnC,mBAAA,CAEM,OAFNoC,WAEM,EAFsB,YACjB,GAAAtB,gBAAA,CAAGV,IAAA,CAAA8B,aAAa,kC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}