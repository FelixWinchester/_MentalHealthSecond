{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"login-page\"\n};\nconst _hoisted_2 = {\n  class: \"header\"\n};\nconst _hoisted_3 = {\n  class: \"content\"\n};\nconst _hoisted_4 = {\n  class: \"section login-section\"\n};\nconst _hoisted_5 = {\n  class: \"login-form\"\n};\nconst _hoisted_6 = {\n  class: \"form-group\"\n};\nconst _hoisted_7 = {\n  class: \"form-group\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" Заголовок страницы \"), _createElementVNode(\"header\", _hoisted_2, [_createElementVNode(\"h1\", null, _toDisplayString($options.pageTitle), 1 /* TEXT */), _cache[3] || (_cache[3] = _createElementVNode(\"p\", null, \"Пожалуйста, войдите в систему, чтобы получить доступ к вашему аккаунту.\", -1 /* HOISTED */))]), _createCommentVNode(\" Основной контент \"), _createElementVNode(\"main\", _hoisted_3, [_createCommentVNode(\" Секция с формой входа \"), _createElementVNode(\"section\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_cache[7] || (_cache[7] = _createElementVNode(\"h2\", null, \"Вход\", -1 /* HOISTED */)), _createElementVNode(\"form\", {\n    onSubmit: _cache[2] || (_cache[2] = _withModifiers((...args) => $options.handleLogin && $options.handleLogin(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", _hoisted_6, [_cache[4] || (_cache[4] = _createElementVNode(\"label\", {\n    for: \"username\"\n  }, \"Имя пользователя:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"username\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.username = $event),\n    required: \"\",\n    placeholder: \"Введите ваше имя пользователя\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.username]])]), _createElementVNode(\"div\", _hoisted_7, [_cache[5] || (_cache[5] = _createElementVNode(\"label\", {\n    for: \"password\"\n  }, \"Пароль:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    id: \"password\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.password = $event),\n    required: \"\",\n    placeholder: \"Введите ваш пароль\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.password]])]), _cache[6] || (_cache[6] = _createElementVNode(\"button\", {\n    type: \"submit\",\n    class: \"cta-button\"\n  }, \"Войти\", -1 /* HOISTED */))], 32 /* NEED_HYDRATION */)]), _cache[8] || (_cache[8] = _createElementVNode(\"div\", {\n    class: \"login-image\"\n  }, [_createElementVNode(\"img\", {\n    src: \"https://via.placeholder.com/400x300\",\n    alt: \"Вход в систему\",\n    class: \"image\"\n  })], -1 /* HOISTED */))]), _createCommentVNode(\" Секция с дополнительной информацией \"), _cache[9] || (_cache[9] = _createElementVNode(\"section\", {\n    class: \"section info-section\"\n  }, [_createElementVNode(\"h2\", null, \"Нет аккаунта?\"), _createElementVNode(\"p\", null, [_createTextVNode(\" Если у вас еще нет аккаунта, вы можете \"), _createElementVNode(\"a\", {\n    href: \"/register\"\n  }, \"зарегистрироваться\"), _createTextVNode(\" прямо сейчас. Это займет всего несколько минут! \")])], -1 /* HOISTED */))])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createCommentVNode","_createElementVNode","_hoisted_2","_toDisplayString","$options","pageTitle","_hoisted_3","_hoisted_4","_hoisted_5","onSubmit","_cache","_withModifiers","args","handleLogin","_hoisted_6","for","type","id","$event","$data","username","required","placeholder","_hoisted_7","password","src","alt","_createTextVNode","href"],"sources":["F:\\_MentalHealthSecond\\frontend\\src\\components\\LoginPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"login-page\">\r\n    <!-- Заголовок страницы -->\r\n    <header class=\"header\">\r\n      <h1>{{ pageTitle }}</h1>\r\n      <p>Пожалуйста, войдите в систему, чтобы получить доступ к вашему аккаунту.</p>\r\n    </header>\r\n\r\n    <!-- Основной контент -->\r\n    <main class=\"content\">\r\n      <!-- Секция с формой входа -->\r\n      <section class=\"section login-section\">\r\n        <div class=\"login-form\">\r\n          <h2>Вход</h2>\r\n          <form @submit.prevent=\"handleLogin\">\r\n            <div class=\"form-group\">\r\n              <label for=\"username\">Имя пользователя:</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"username\"\r\n                v-model=\"username\"\r\n                required\r\n                placeholder=\"Введите ваше имя пользователя\"\r\n              />\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"password\">Пароль:</label>\r\n              <input\r\n                type=\"password\"\r\n                id=\"password\"\r\n                v-model=\"password\"\r\n                required\r\n                placeholder=\"Введите ваш пароль\"\r\n              />\r\n            </div>\r\n            <button type=\"submit\" class=\"cta-button\">Войти</button>\r\n          </form>\r\n        </div>\r\n        <div class=\"login-image\">\r\n          <img\r\n            src=\"https://via.placeholder.com/400x300\"\r\n            alt=\"Вход в систему\"\r\n            class=\"image\"\r\n          />\r\n        </div>\r\n      </section>\r\n\r\n      <!-- Секция с дополнительной информацией -->\r\n      <section class=\"section info-section\">\r\n        <h2>Нет аккаунта?</h2>\r\n        <p>\r\n          Если у вас еще нет аккаунта, вы можете <a href=\"/register\">зарегистрироваться</a> прямо сейчас.\r\n          Это займет всего несколько минут!\r\n        </p>\r\n      </section>\r\n    </main>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport api from '@/api';\r\nexport default {\r\n  name: 'LoginPage',\r\n  props: {\r\n    page: {\r\n      type: String,\r\n      default: 'Вход', // Значение по умолчанию\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      username: '',\r\n      password: '',\r\n    };\r\n  },\r\n  computed: {\r\n    pageTitle() {\r\n      return this.page || 'Вход';\r\n    },\r\n  },\r\n  methods: {\r\n    handleLogin() {\r\n      // Логика для обработки входа\r\n      console.log('Пользователь входит:', this.username);\r\n      // Здесь можно добавить вызов API для аутентификации\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.login-page {\r\n  font-family: Arial, sans-serif;\r\n  color: #333;\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n}\r\n\r\n.header {\r\n  text-align: center;\r\n  margin-bottom: 40px;\r\n}\r\n\r\n.header h1 {\r\n  font-size: 2.5rem;\r\n  color: #2c3e50;\r\n}\r\n\r\n.header p {\r\n  font-size: 1.2rem;\r\n  color: #666;\r\n}\r\n\r\n.content {\r\n  margin-bottom: 40px;\r\n}\r\n\r\n.section {\r\n  margin-bottom: 40px;\r\n}\r\n\r\n.section h2 {\r\n  font-size: 2rem;\r\n  color: #2c3e50;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.login-section {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 40px;\r\n}\r\n\r\n.login-form {\r\n  flex: 1;\r\n}\r\n\r\n.login-form p {\r\n  font-size: 1.1rem;\r\n  line-height: 1.6;\r\n  color: #444;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.form-group {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.form-group label {\r\n  display: block;\r\n  font-size: 1rem;\r\n  color: #444;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.form-group input {\r\n  width: 100%;\r\n  padding: 10px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 5px;\r\n  font-size: 1rem;\r\n}\r\n\r\n.cta-button {\r\n  background-color: #2c3e50;\r\n  color: white;\r\n  border: none;\r\n  padding: 10px 20px;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  font-size: 1rem;\r\n}\r\n\r\n.cta-button:hover {\r\n  background-color: #1a2a36;\r\n}\r\n\r\n.login-image img {\r\n  max-width: 100%;\r\n  border-radius: 10px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.info-section {\r\n  text-align: center;\r\n}\r\n\r\n.info-section p {\r\n  font-size: 1.1rem;\r\n  color: #666;\r\n}\r\n\r\n.info-section a {\r\n  color: #2c3e50;\r\n  text-decoration: none;\r\n}\r\n\r\n.info-section a:hover {\r\n  text-decoration: underline;\r\n}\r\n</style>"],"mappings":";;EACOA,KAAK,EAAC;AAAY;;EAEbA,KAAK,EAAC;AAAQ;;EAMhBA,KAAK,EAAC;AAAS;;EAEVA,KAAK,EAAC;AAAuB;;EAC/BA,KAAK,EAAC;AAAY;;EAGdA,KAAK,EAAC;AAAY;;EAUlBA,KAAK,EAAC;AAAY;;uBAxBjCC,mBAAA,CAuDM,OAvDNC,UAuDM,GAtDJC,mBAAA,wBAA2B,EAC3BC,mBAAA,CAGS,UAHTC,UAGS,GAFPD,mBAAA,CAAwB,YAAAE,gBAAA,CAAjBC,QAAA,CAAAC,SAAS,kB,0BAChBJ,mBAAA,CAA8E,WAA3E,yEAAuE,qB,GAG5ED,mBAAA,sBAAyB,EACzBC,mBAAA,CA8CO,QA9CPK,UA8CO,GA7CLN,mBAAA,2BAA8B,EAC9BC,mBAAA,CAkCU,WAlCVM,UAkCU,GAjCRN,mBAAA,CAyBM,OAzBNO,UAyBM,G,0BAxBJP,mBAAA,CAAa,YAAT,MAAI,sBACRA,mBAAA,CAsBO;IAtBAQ,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAdvBC,cAAA,KAAAC,IAAA,KAciCR,QAAA,CAAAS,WAAA,IAAAT,QAAA,CAAAS,WAAA,IAAAD,IAAA,CAAW;MAChCX,mBAAA,CASM,OATNa,UASM,G,0BARJb,mBAAA,CAA+C;IAAxCc,GAAG,EAAC;EAAU,GAAC,mBAAiB,sB,gBACvCd,mBAAA,CAME;IALAe,IAAI,EAAC,MAAM;IACXC,EAAE,EAAC,UAAU;IAnB7B,uBAAAP,MAAA,QAAAA,MAAA,MAAAQ,MAAA,IAoByBC,KAAA,CAAAC,QAAQ,GAAAF,MAAA;IACjBG,QAAQ,EAAR,EAAQ;IACRC,WAAW,EAAC;iDAFHH,KAAA,CAAAC,QAAQ,E,KAKrBnB,mBAAA,CASM,OATNsB,UASM,G,0BARJtB,mBAAA,CAAqC;IAA9Bc,GAAG,EAAC;EAAU,GAAC,SAAO,sB,gBAC7Bd,mBAAA,CAME;IALAe,IAAI,EAAC,UAAU;IACfC,EAAE,EAAC,UAAU;IA7B7B,uBAAAP,MAAA,QAAAA,MAAA,MAAAQ,MAAA,IA8ByBC,KAAA,CAAAK,QAAQ,GAAAN,MAAA;IACjBG,QAAQ,EAAR,EAAQ;IACRC,WAAW,EAAC;iDAFHH,KAAA,CAAAK,QAAQ,E,+BAKrBvB,mBAAA,CAAuD;IAA/Ce,IAAI,EAAC,QAAQ;IAACnB,KAAK,EAAC;KAAa,OAAK,qB,wDAGlDI,mBAAA,CAMM;IANDJ,KAAK,EAAC;EAAa,IACtBI,mBAAA,CAIE;IAHAwB,GAAG,EAAC,qCAAqC;IACzCC,GAAG,EAAC,gBAAgB;IACpB7B,KAAK,EAAC;6BAKZG,mBAAA,yCAA4C,E,0BAC5CC,mBAAA,CAMU;IANDJ,KAAK,EAAC;EAAsB,IACnCI,mBAAA,CAAsB,YAAlB,eAAa,GACjBA,mBAAA,CAGI,YArDZ0B,gBAAA,CAkDW,0CACsC,GAAA1B,mBAAA,CAA0C;IAAvC2B,IAAI,EAAC;EAAW,GAAC,oBAAkB,GAnDvFD,gBAAA,CAmD2F,mDAEnF,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}