{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport api from '@/api/api';\nexport default {\n  name: 'ConditionPage',\n  data() {\n    return {\n      selectedEmoji: null,\n      emojis: [{\n        id: 1,\n        name: \"Радость\",\n        icon: require(\"@/assets/emojis/happy.svg\")\n      }, {\n        id: 2,\n        name: \"Грусть\",\n        icon: require(\"@/assets/emojis/sad.svg\")\n      }, {\n        id: 3,\n        name: \"Злость\",\n        icon: require(\"@/assets/emojis/angry.svg\")\n      }\n      // ... другие смайлики\n      ]\n    };\n  },\n  async created() {\n    await this.fetchData();\n  },\n  methods: {\n    async fetchData() {\n      try {\n        const [notesResponse, moodResponse] = await Promise.all([api.get('/notes', {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        }), api.get('/mood', {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        })]);\n        this.notes = notesResponse.data;\n        this.selectedEmoji = moodResponse.data.emoji;\n      } catch (error) {\n        console.error('Ошибка загрузки данных:', error);\n        if (error.response?.status === 401) {\n          this.$router.push('/login');\n        }\n      } finally {\n        this.loading = false;\n      }\n    },\n    async addNote() {\n      if (!this.newNote.trim()) return;\n      try {\n        const response = await api.post('/notes', {\n          text: this.newNote\n        }, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        this.notes.push(response.data);\n        this.newNote = '';\n      } catch (error) {\n        console.error('Ошибка добавления заметки:', error);\n      }\n    },\n    async deleteNote(noteId) {\n      try {\n        await api.delete(`/notes/${noteId}`, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        this.notes = this.notes.filter(note => note.id !== noteId);\n      } catch (error) {\n        console.error('Ошибка удаления заметки:', error);\n      }\n    },\n    async selectEmoji(emoji) {\n      try {\n        const newEmoji = this.selectedEmoji === emoji ? null : emoji;\n        await api.post('/mood', {\n          emoji: newEmoji\n        }, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        this.selectedEmoji = newEmoji;\n      } catch (error) {\n        console.error('Ошибка сохранения эмоции:', error);\n      }\n    },\n    selectEmoji(emoji) {\n      this.selectedEmoji = emoji;\n    }\n  }\n};","map":{"version":3,"names":["api","name","data","selectedEmoji","emojis","id","icon","require","created","fetchData","methods","notesResponse","moodResponse","Promise","all","get","headers","Authorization","localStorage","getItem","notes","emoji","error","console","response","status","$router","push","loading","addNote","newNote","trim","post","text","deleteNote","noteId","delete","filter","note","selectEmoji","newEmoji"],"sources":["C:\\Users\\Professional\\Desktop\\gggg\\_MentalHealthSecond\\frontend\\src\\components\\ConditionPage.vue"],"sourcesContent":["<template>\r\n    <div class=\"login-page\">\r\n      <!-- Заголовок страницы -->\r\n      <header class=\"header\">\r\n        <h1>{{ pageTitle }}</h1>\r\n        <p>Пожалуйста, войдите в систему, чтобы получить доступ к вашему аккаунту.</p>\r\n      </header>\r\n\r\n      <!-- Основной контент -->\r\n    <main class=\"content\">\r\n      <div class=\"main-layout\">\r\n        <!-- Блок с заметками -->\r\n        <section class=\"notes-section\">\r\n          <div class=\"notes-list\">\r\n            <div v-for=\"(note, index) in notes\" :key=\"index\" class=\"note-card\">\r\n              {{ note.text }}\r\n            </div>\r\n          </div>\r\n          <div class=\"new-note\">\r\n            <textarea \r\n              v-model=\"newNote\" \r\n              placeholder=\"Добавьте новую заметку...\"\r\n              @keyup.enter=\"addNote\"\r\n            ></textarea>\r\n            <button @click=\"addNote\" class=\"cta-button\">Добавить</button>\r\n          </div>\r\n        </section>\r\n\r\n        <!-- Блок с эмодзи -->\r\n        <div class=\"emoji-grid\">\r\n            <div \r\n                v-for=\"(emoji, index) in emojis\" \r\n                :key=\"index\" \r\n                class=\"emoji-item\"\r\n                @click=\"selectEmoji(emoji)\"\r\n            >\r\n                <img \r\n                :src=\"emoji.icon\" \r\n                :alt=\"emoji.name\" \r\n                :class=\"['emoji-icon', { 'selected': selectedEmoji?.id === emoji.id }]\"\r\n                />\r\n                <span class=\"emoji-label\">{{ emoji.name }}</span>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    </main>   \r\n    </div>\r\n  </template>\r\n\r\n\r\n<script>\r\nimport api from '@/api/api';\r\n\r\nexport default {\r\n  name: 'ConditionPage',\r\n  data() {\r\n    return {\r\n      selectedEmoji: null,\r\n      emojis: [\r\n        {\r\n          id: 1,\r\n          name: \"Радость\",\r\n          icon: require(\"@/assets/emojis/happy.svg\"),\r\n        },\r\n        {\r\n          id: 2,\r\n          name: \"Грусть\",\r\n          icon: require(\"@/assets/emojis/sad.svg\"),\r\n        },\r\n        {\r\n          id: 3,\r\n          name: \"Злость\",\r\n          icon: require(\"@/assets/emojis/angry.svg\"),\r\n        },\r\n        // ... другие смайлики\r\n      ],\r\n    };\r\n  },\r\n  async created() {\r\n    await this.fetchData();\r\n  },\r\n  methods: {\r\n    async fetchData() {\r\n      try {\r\n        const [notesResponse, moodResponse] = await Promise.all([\r\n          api.get('/notes', {\r\n            headers: {\r\n              Authorization: `Bearer ${localStorage.getItem('token')}`\r\n            }\r\n          }),\r\n          api.get('/mood', {\r\n            headers: {\r\n              Authorization: `Bearer ${localStorage.getItem('token')}`\r\n            }\r\n          })\r\n        ]);\r\n\r\n        this.notes = notesResponse.data;\r\n        this.selectedEmoji = moodResponse.data.emoji;\r\n      } catch (error) {\r\n        console.error('Ошибка загрузки данных:', error);\r\n        if (error.response?.status === 401) {\r\n          this.$router.push('/login');\r\n        }\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n\r\n    async addNote() {\r\n      if (!this.newNote.trim()) return;\r\n\r\n      try {\r\n        const response = await api.post('/notes', \r\n          { text: this.newNote },\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${localStorage.getItem('token')}`\r\n            }\r\n          }\r\n        );\r\n\r\n        this.notes.push(response.data);\r\n        this.newNote = '';\r\n      } catch (error) {\r\n        console.error('Ошибка добавления заметки:', error);\r\n      }\r\n    },\r\n\r\n    async deleteNote(noteId) {\r\n      try {\r\n        await api.delete(`/notes/${noteId}`, {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem('token')}`\r\n          }\r\n        });\r\n        this.notes = this.notes.filter(note => note.id !== noteId);\r\n      } catch (error) {\r\n        console.error('Ошибка удаления заметки:', error);\r\n      }\r\n    },\r\n\r\n    async selectEmoji(emoji) {\r\n      try {\r\n        const newEmoji = this.selectedEmoji === emoji ? null : emoji;\r\n        await api.post('/mood', \r\n          { emoji: newEmoji },\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${localStorage.getItem('token')}`\r\n            }\r\n          }\r\n        );\r\n        this.selectedEmoji = newEmoji;\r\n      } catch (error) {\r\n        console.error('Ошибка сохранения эмоции:', error);\r\n      }\r\n    },\r\n    \r\n    selectEmoji(emoji) {\r\n      this.selectedEmoji = emoji;\r\n    },\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n\r\n\r\n.loading {\r\n  text-align: center;\r\n  padding: 20px;\r\n  color: #666;\r\n}\r\n\r\n.delete-button {\r\n  background: none;\r\n  border: none;\r\n  color: #ff4444;\r\n  cursor: pointer;\r\n  float: right;\r\n  font-size: 1.2rem;\r\n  line-height: 1;\r\n}\r\n\r\n.delete-button:hover {\r\n  color: #cc0000;\r\n}\r\n\r\n.selected {\r\n  border-color: #2c3e50 !important;\r\n  background-color: #e8f4ff !important;\r\n}\r\n\r\n.header {\r\n  text-align: center;\r\n  margin-bottom: 40px;\r\n}\r\n\r\n.header h1 {\r\n  font-size: 2.5rem;\r\n  color: #2c3e50;\r\n}\r\n\r\n.header p {\r\n  font-size: 1.2rem;\r\n  color: #666;\r\n}\r\n\r\n.content {\r\n  margin-bottom: 40px;\r\n}\r\n\r\n.section {\r\n  margin-bottom: 40px;\r\n}\r\n\r\n.section h2 {\r\n  font-size: 2rem;\r\n  color: #2c3e50;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n\r\n.form-group {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.form-group label {\r\n  display: block;\r\n  font-size: 1rem;\r\n  color: #444;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.form-group input {\r\n  width: 100%;\r\n  padding: 10px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 5px;\r\n  font-size: 1rem;\r\n}\r\n\r\n.cta-button {\r\n  background-color: #2c3e50;\r\n  color: white;\r\n  border: none;\r\n  padding: 10px 20px;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  font-size: 1rem;\r\n}\r\n\r\n.cta-button:hover {\r\n  background-color: #1a2a36;\r\n}\r\n\r\n\r\n.info-section {\r\n  text-align: center;\r\n}\r\n\r\n.info-section p {\r\n  font-size: 1.1rem;\r\n  color: #666;\r\n}\r\n\r\n.info-section a {\r\n  color: #2c3e50;\r\n  text-decoration: none;\r\n}\r\n\r\n.info-section a:hover {\r\n  text-decoration: underline;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}